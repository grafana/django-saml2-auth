name: deploy

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:

jobs:
  test:
    name: Test django-saml2-auth
    runs-on: ubuntu-latest
    strategy:
      matrix:
        versions:
          - { "djangoVersion": "4.2.20", "pythonVersion": "3.10" }
          - { "djangoVersion": "4.2.20", "pythonVersion": "3.11" }
          - { "djangoVersion": "4.2.20", "pythonVersion": "3.12" }
          - { "djangoVersion": "5.0.13", "pythonVersion": "3.10" }
          - { "djangoVersion": "5.0.13", "pythonVersion": "3.11" }
          - { "djangoVersion": "5.0.13", "pythonVersion": "3.12" }
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
      - name: Set up Python 🐍
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.versions.pythonVersion }}
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Install xmlsec1 📦
        run: sudo apt-get install xmlsec1
      - name: Install dependencies 📦
        run: |
          uv sync
          uv add Django==${{ matrix.versions.djangoVersion }}
      - name: Check types, syntax and duckstrings 🦆
        run: |
          uv run python -m mypy --explicit-package-bases .
          uv run python -m ruff check .
      - name: Test Django ${{ matrix.versions.djangoVersion }} with coverage 🧪
        run: |
          uv run coverage run --source=django_saml2_auth -m pytest . && uv run coverage lcov -o coverage.lcov
      - name: Submit coverage report to Coveralls 📈
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./coverage.lcov
          flag-name: run-${{ join(matrix.versions.*, '-') }}
          parallel: true
  finish:
    needs: test
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@v2
        with:
          parallel-finished: true
  build:
    name: Build and Push django-saml2-auth to PyPI
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags') }}
    needs: test
    env:
      python-version: "3.10"
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
      - name: Set up Python 🐍
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Install xmlsec1 📦
        run: sudo apt-get install xmlsec1
      - name: Install dependencies 📦
        run: |
          uv sync
          uv pip install build cyclonedx-bom twine
      - name: Generate CycloneDX SBOM artifacts 📃
        run: |
          uv run python -m cyclonedx_py env --pyproject pyproject.toml --of JSON -o django-saml2-auth-${{ github.ref_name }}.cyclonedx.json
      - name: Build package 🏗️
        run: |
          uv run python -m build
      - name: Publish to PyPI 📦
        run: |
          uv run python -m twine upload --username __token__ --password ${{ secrets.PYPI_API_TOKEN }} dist/*
      - name: Create release and add artifacts 🚀
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.tar.gz
            dist/*.whl
            django-saml2-auth-${{ github.ref_name }}.cyclonedx.json
          draft: false
          prerelease: false
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          generate_release_notes: true
