name: deploy

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:

permissions: {}

jobs:
  test:
    name: Test django-saml2-auth
    runs-on: ubuntu-latest
    strategy:
      matrix:
        versions:
          - { "djangoVersion": "4.2.24", "pythonVersion": "3.10" }
          - { "djangoVersion": "4.2.24", "pythonVersion": "3.11" }
          - { "djangoVersion": "4.2.24", "pythonVersion": "3.12" }
          - { "djangoVersion": "5.1.12", "pythonVersion": "3.10" }
          - { "djangoVersion": "5.1.12", "pythonVersion": "3.11" }
          - { "djangoVersion": "5.1.12", "pythonVersion": "3.12" }
          - { "djangoVersion": "5.1.12", "pythonVersion": "3.13" }
          - { "djangoVersion": "5.2.6", "pythonVersion": "3.10" }
          - { "djangoVersion": "5.2.6", "pythonVersion": "3.11" }
          - { "djangoVersion": "5.2.6", "pythonVersion": "3.12" }
          - { "djangoVersion": "5.2.6", "pythonVersion": "3.13" }
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Set up Python 🐍
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ matrix.versions.pythonVersion }}
      - name: Install uv
        uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e # v6.8.0
        with:
          enable-cache: false
      - name: Install xmlsec1 📦
        run: sudo apt-get install xmlsec1
      - name: Install dependencies 📦
        run: |
          uv sync
          uv add Django==${{ matrix.versions.djangoVersion }}
      - name: Check types, syntax and duckstrings 🦆
        run: |
          uv run python -m mypy --explicit-package-bases .
          uv run python -m ruff check .
      - name: Test Django ${{ matrix.versions.djangoVersion }} with coverage 🧪
        run: |
          uv run coverage run --source=django_saml2_auth -m pytest . && uv run coverage lcov -o coverage.lcov
      - name: Submit coverage report to Coveralls 📈
        uses: coverallsapp/github-action@648a8eb78e6d50909eff900e4ec85cab4524a45b # v2.3.6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./coverage.lcov
          flag-name: run-${{ join(matrix.versions.*, '-') }}
          parallel: true
  finish:
    needs: test
    if: ${{ always() }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@648a8eb78e6d50909eff900e4ec85cab4524a45b # v2.3.6
        with:
          parallel-finished: true
  build:
    name: Build and Push django-saml2-auth to PyPI
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags') }}
    needs: test
    env:
      python-version: "3.10"
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Set up Python 🐍
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ env.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e # v6.8.0
        with:
          enable-cache: false
      - name: Install xmlsec1 📦
        run: sudo apt-get install xmlsec1
      - name: Install dependencies 📦
        run: |
          uv sync
          uv pip install build cyclonedx-bom twine
      - name: Generate CycloneDX SBOM artifacts 📃
        run: |
          uv run python -m cyclonedx_py env --pyproject pyproject.toml --of JSON -o django-saml2-auth-${GITHUB_REF_NAME}.cyclonedx.json
      - name: Build package 🏗️
        run: |
          uv run python -m build
      - name: Publish to PyPI 📦
        run: |
          uv run python -m twine upload --username __token__ --password ${{ secrets.PYPI_API_TOKEN }} dist/*
      - name: Create release and add artifacts 🚀
        uses: softprops/action-gh-release@6cbd405e2c4e67a21c47fa9e383d020e4e28b836 # v2.3.3
        with:
          files: |
            dist/*.tar.gz
            dist/*.whl
            django-saml2-auth-${{ github.ref_name }}.cyclonedx.json
          draft: false
          prerelease: false
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          generate_release_notes: true
